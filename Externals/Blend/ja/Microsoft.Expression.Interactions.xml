<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
パラメーターを取らないメソッド、または 1 つのパラメータを取るメソッドをラップする、ICommand の基本的な実装です。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="action">アクション。</param>
<remarks>このコンストラクターを使用し、ICommand パラメータを無視するアクションを提供します。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="objectAction">オブジェクト パラメーターを取るアクション。</param>
<remarks>このコンストラクターを使用し、メソッドの実行によって渡されるオブジェクト パラメーターを使用するアクションを提供します。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
現在の状態でコマンドが実行可能かどうかを決定するメソッドを定義します。
            </summary>
<param name="parameter">コマンドにより使用されるデータです。このコマンドが引き渡すデータを要求しない場合、オブジェクトを null に設定できます。</param>
            <returns>
常に真を返します。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
コマンドが起動される際に呼び出すメソッドを定義します。
            </summary>
<param name="parameter">コマンドにより使用されるデータです。このコマンドが引き渡すデータを要求しない場合、オブジェクトを null に設定できます。</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
コマンドを実行すべきかどうかに影響を与える変更がされたときに発生します。ActionCommand によっては実行されません。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.CallMethodAction">
            <summary>
呼び出されたときに、指定したオブジェクトでメソッドを呼び出します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.CallMethodAction.Invoke(System.Object)">
            <summary>
アクションを起動します。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.CallMethodAction.OnAttached">
            <summary>
アクションが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これをオーバーライドし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.CallMethodAction.OnDetaching">
            <summary>
アクションは、AssociatedObject から分離取得されている場合、実際に発生した前に呼び出されます。
            </summary>
<remarks>これをオーバーライドし、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.CallMethodAction.TargetObject">
            <summary>
関心のあるメソッドを公開するオブジェクト。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.CallMethodAction.MethodName">
            <summary>
呼び出されるメソッドの名前です。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
起動されたときに、特定のプロパティを特定の値に変更するアクションです。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
アクションを起動します。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
<exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> を伴うプロパティは、ターゲット上で見つかりませんでした。</exception>
<exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/> で指定された値に<c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> を設定できませんでした。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
変更するプロパティの名前を取得または設定します。これは依存関係プロパティです。
            </summary>
<value>変更するプロパティの名前。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
設定する値を取得または設定します。これは依存関係プロパティです。
            </summary>
<value>設定する値。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
ChangePropertyAction が起動されたときに表示されるアニメーションの再生時間を取得または設定します。これは依存関係プロパティです。時間を設定しないと、アニメーションは適用されません。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Increment">
            <summary>
値が True の場合はインクリメントし、それ以外の場合は、値を直接設定します。プロパティを上げることはできない場合は、その代わりに直接値を設定しようとします。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ComparisonCondition">
            <summary>
三項条件の 1 つを表します
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ComparisonCondition.Evaluate">
            <summary>
条件を評価する方法です。演算子は型と互換性がない場合にこのメソッド ArgumentException スローできることに注意してください。たとえば、演算子 LessThan、LessThanOrEqual、GreaterThan、GreaterThanOrEqual ◇ IComparable を実装するのには、両方の演算子 
            </summary>
<returns>条件がそれ以外の場合は、false を満たすされている場合に true を返します</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ComparisonCondition.EnsureBindingUpToDate">
            <summary>
すべてのバインドを DP オペランドが最新であることを確認してください。  
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ComparisonCondition.LeftOperand">
            <summary>
取得、または左側のオペランドの設定
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ComparisonCondition.RightOperand">
            <summary>
取得または設定が右側のオペランド
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ComparisonCondition.Operator">
            <summary>
比較演算子のセットを取得または設定します。 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ComparisonConditionType">
            <summary>
列挙体のさまざまな比較演算子
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.ComparisonLogic.EvaluateImpl(System.Object,Microsoft.Expression.Interactivity.Core.ComparisonConditionType,System.Object)">
            <summary>
このメソッドのオペランドを評価します。 
            </summary>
<param name="leftOperand">LeftOperand プロパティから左のオペランド</param>
<param name="operatorType">演算子オペレーターのプロパティから</param>
<param name="rightOperand">RightOperand プロパティの右側のオペランド</param>
<returns>条件それ以外の場合は、false を満たす場合に true を返します</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.ComparisonLogic.EvaluateComparable(System.IComparable,Microsoft.Expression.Interactivity.Core.ComparisonConditionType,System.IComparable)">
            <summary>
Evalute のオペランドがどちらも IComparable インターフェイスを実装すること
            </summary>
<param name="leftOperand">LeftOperand プロパティから左のオペランド</param>
<param name="operatorType">演算子オペレーターのプロパティから</param>
<param name="rightOperand">LeftOperand プロパティの右側のオペランド</param>
<returns>条件、false がそれ以外の場合は満たされる場合、True</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ForwardChaining">
            <summary>
チェーン転送します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ConditionalExpression">
            <summary>
ConditionBehavior.Condition プロパティを設定する条件式を表します。注文の戻り値 true または false で ICondition.Evaluate() の評価を取得する条件の一覧が含まれています。 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ICondition">
            <summary>
インターフェイスは、ConditionBehavior.Condition プロパティを設定するために、特定のオブジェクトを実装する必要があります。 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ConditionalExpression.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ConditionalExpression"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ConditionalExpression.Evaluate">
            <summary>
条件コレクションと evalute ～ ForwardChaining プロパティに基づいた各条件に移動します。
            </summary>
<returns>True を指定すると、条件が満たされている、False を指定する条件が満たされない</returns>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ConditionalExpression.ForwardChaining">
            <summary>
GET またはフォワード チェーンに ForwardChaining.And に設定すると、条件をフォワード チェーン設定すると、すべての条件を満たす必要があります。フォワード チェーンに ForwardChaining.or が設定されている場合は、1 つの条件を満たす必要があります。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ConditionalExpression.Conditions">
            <summary>
条件コレクションを返す
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ConditionBehavior">
            <summary>
トリガーに適用し、アクションを発生させる条件を管理する動作です。 
            </summary>
            
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ConditionBehavior.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ConditionBehavior"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ConditionBehavior.OnPreviewInvoke(System.Object,System.Windows.Interactivity.PreviewInvokeEventArgs)">
            <summary>
イベント ハンドラーのプレビューをリッスンしているイベントによってトリガーを起動します。PreviewInvokeEventArgs.Cancelling を true に設定すると、呼び出しがキャンセルされます。
            </summary>
<param name="sender">トリガーの基本 objec</param>
<param name="e">PreviewInvokeEventArgs の e.Cancelling を設定できる型のオブジェクトを true に設定</param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ConditionBehavior.Condition">
            <summary>
取得、または IConditon オブジェクトの動作を設定
            </summary>
<value>変更する条件の名前です。</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.DataBindingHelper">
            <summary>
連結式の依存関係オブジェクトを管理するためのヘルパー クラス
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.DataBindingHelper.EnsureDataBindingUpToDateOnMembers(System.Windows.DependencyObject)">
            <summary>
すべての DP バインド式とアクションで最新であることを確認してください。DataTrigger は、データ バインディング フェーズ中に発生します。アクション トリガーの子であるため、操作上のすべてのバインドを更新されません。このルーチンはすべてのバインドが最新のデータを最新であることを保証するために、アクションを呼び出す前に呼び出されます。 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.DataBindingHelper.EnsureDataBindingOnActionsUpToDate(System.Windows.Interactivity.TriggerBase{System.Windows.DependencyObject})">
            <summary>
アクションのすべての連結式が最新であることを確認します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.DataBindingHelper.EnsureBindingUpToDate(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
このヘルパー関数従属オブジェクトの依存関係プロパティは、連結式がある場合は、連結式を最新になります。 
            </summary>
            <param name="target"></param>
            <param name="dp"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.DataStateBehavior">
            <summary>
条件付きステートメントに基づいて 2 つの状態を切り替えます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.DataStateBehavior.OnAttached">
            <summary>
ビヘイビアーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これをオーバーライドし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.DataStateBehavior.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
Silverlight に類似のプロパティがないために FrameworkElement.IsLoaded に取って代わるヘルパー関数です。
            </summary>
<param name="element">関心の要素。</param>
<returns>要素がロードされる場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataStateBehavior.Binding">
            <summary>
データ オブジェクトのプロパティ値を生成するバインド設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataStateBehavior.Value">
            <summary>
データ オブジェクトのプロパティの値を比較する値の設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataStateBehavior.TrueState">
            <summary>
条件が満たされたときのビジュアル状態の名前に移行する設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataStateBehavior.FalseState">
            <summary>
満たされたときのビジュアル状態の名前に移行する設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.DataStoreChangedTrigger">
            <summary>
トリガーのデータを結合するようにプロパティを格納します。プロパティが変更されたときに発生
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.PropertyChangedTrigger">
             <summary>
バインドされたデータが変更されたときにアクションを実行するトリガーを表します。 
             </summary>
UA_REVIEW:chabiss
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.PropertyChangedTrigger.EvaluateBindingChange(System.Object)">
            <summary>
バインド プロパティが変更されたときに呼び出されます。UA_REVIEW:chabiss
            </summary>
<param name="args"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/>引数です。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.PropertyChangedTrigger.OnAttached">
            <summary>
トリガーが AssociatedObject にアタッチされた後で呼び出されます。UA_REVIEW:chabiss
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.PropertyChangedTrigger.OnDetaching">
            <summary>
トリガーが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。UA_REVIEW:chabiss
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.PropertyChangedTrigger.Binding">
             <summary>
バインド オブジェクト、トリガー リッスンし、変更で発生します。  
             </summary>
UA_REVIEW:chabiss
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.DataTrigger">
            <summary>
バインドされたデータが指定した条件を満たしているときにアクションを実行するトリガーを表します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.DataTrigger.EvaluateBindingChange(System.Object)">
            <summary>
バインド プロパティが変更されたときに呼び出されます。UA_REVIEW:chabiss
            </summary>
<param name="args"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/>引数です。</param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataTrigger.Value">
            <summary>
データ オブジェクトのプロパティの値を比較する値の設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.DataTrigger.Comparison">
            <summary>
指定した値の間実行する比較の種類の設定を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
ExtendedVisualStateManager は、レイアウト プロパティのアニメーションを滑らかにするカスタム VisualStateManager です。このカスタム VisualStateManager により、状態は Grid.Column などのプロパティの変更を含むことができ、要素の高さを &apos;Auto&apos; に切り替えたり、戻したりできます。これらの変更は、適切な切り替え効果の GeneratedDuration および GeneratedEasingFunction を使用することによって、徐々に滑らかになります。このアルゴリズムの一般的な説明については、以下の &quot;VisualStateManager オーバーライド&quot; を参照してください。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
VisualStateGroup は、場合によっては Fluid Layout を使用できません。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.RuntimeVisibilityPropertyProperty">
            <summary>
視程は実行時にカスタム添付プロパティでシャドウされています。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
VisualStateGroup はこれらの元の値のリストをアタッチされたプロパティに保持します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
すべての状態について、レイアウト固有のプロパティを抽出し、状態に添付します。これらのプロパティは、状態自体から削除されます。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
現在の状況を保存します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.TransitionEffectProperty">
            <summary>
状態を変更するときに使用する TransitionEffect を指定します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.TransitionEffectStoryboardProperty">
            <summary>
使用中状態の変化に TransitionEffectStoryboard。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.DidCacheBackgroundProperty">
            <summary>
キャッシュされたバックグラウンドで状態の変更中に使用します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CachedBackgroundProperty">
            <summary>
キャッシュされたバックグラウンドで状態の変更中に使用します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
これは、現在モーション中の要素のセットです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
これは、移行をアニメーション化するストーリーボードです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
この一覧には、すべての既知のレイアウト プロパティが含まれます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
アニメーションを停止し、アニメーションをサポートするために行ったレイアウト変更を置き換えます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
変更をアニメーション化するために VisualStateManager が使用する移行を見つけ、レイアウト アニメーションが時間およびイーズに一致するようにします。
            </summary>
<param name="group">移行が発生するグループ</param>
<param name="previousState">移行前の状態</param>
<param name="state">移行後の状態</param>
<returns>移行</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
状態のストーリーボードからレイアウトに影響を及ぼすすべてのプロパティを削除し、アタッチされたプロパティにキャッシュします。
            </summary>
<param name="state">移行後の状態</param>
<returns>状態内にレイアウト プロパティを含むストーリーボード</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
このターゲット要素のセットは、レイアウト移行へ移動した可能性のあるすべての要素です。このセットのクロージャです:-要素のレイアウト プロパティの状態はアニメーション化します。-兄弟要素のセットです。-セット内の要素の親。
             
以降のコードは、レイアウトの変更前後にこれらの四角形をチェックします。
            </summary>
<param name="control">状態が変化しているレイアウトのコントロール</param>
<param name="layoutStoryboard">レイアウトの変更を含むストーリーボード</param>
<param name="originalValueRecords">戻せる可能性がある、以前の状態ナビゲーションからの前の値</param>
<param name="movingElements">状態の変化が移行中の場合の、現在モーション中の要素のセット</param>
<returns>レイアウトが変更された可能性のあるすべての要素のセット</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
ターゲット一覧内のすべての要素に対して四角形のセットを取得します。
            </summary>
<param name="targets">対象となる要素のセット</param>
<param name="movingElements">現在モーション中の要素のセット</param>
<returns>要素をそれらの四角形にマッピングするディクショナリ</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
レイアウト スロットを取得してからスロットの使用される部分を計算することによって、要素のレイアウト四角形を取得します。
            </summary>
<param name="element">求めている四角形が所属する要素</param>
<returns>要素のレイアウト四角形</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
可視性ではなく状態変化時の要素の不透明度を取得します。これは、状態の変化が途中である可能性があり、現在の値が最も重要であるためです。
            </summary>
<param name="control">状態が変化しているコントロール</param>
<param name="layoutStoryboard">レイアウトのプロパティを伴うストーリーボード</param>
<param name="originalValueRecords">元の値のセット</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
ストーリーボードの中で SetValue を使用してすべてのプロパティを設定し、表示の原因となるタイムラインのティッキングを行わずに UpdateLayout を呼び出せるようにします。上書きされるすべての値は、後で置換できるように OriginalValueRecords のコレクションに保管されます。
            </summary>
<param name="control">状態が変化しているコントロール</param>
<param name="layoutStoryboard">レイアウトのプロパティを保持するストーリーボード</param>
<param name="originalValueRecords">元の値の保管</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
レイアウトのアニメーション化の結果として移動するすべての要素を取得し、それらが兄弟要素に影響を与えないように Canvases にラップします。
            </summary>
<param name="movingElements">移動する要素のセット</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
レイアウトのアニメーション化の結果として移動中のすべての要素を取得し、Canvases からラップ解除します。
            </summary>
<param name="movingElements">移動中の要素のセット</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
レイアウト プロパティをソース要素からターゲット要素にコピーし、ソースから削除します。
            </summary>
<param name="source">レイアウト プロパティのソース</param>
<param name="target">レイアウト プロパティのコピー先</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
以降のアニメーション化に使用する実際のストーリーボードを作成します。以前の計算結果をすべて使用します。
            </summary>
<param name="duration">アニメーションの時間</param>
<param name="ease">アニメーションに使用するイージング機能</param>
<param name="movingElements">移動する要素のセット</param>
<param name="oldOpacities">可視性が変化中の要素の元の不透明度</param>
<returns>ストーリーボード</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
OriginalValueRecord は状態を変化させたプロパティの元の値を保存しています。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
この列挙型は、それが添付されている要素か、またはその要素の子のどちらに FluidMoveBehavior が適用するかを示します。特別なビヘイビアが必要な単一の要素がある場合、&quot;自己&quot; を使用し、同じ動作を WrapPanel のすべての子または ItemsControl の ItemsHost Panel に適用する場合は &quot;子&quot; を使用します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.TagType">
            <summary>
この列挙型の要素を識別するかどうかを示す自体、またはその DataContext。DataContext 識別データ ドリブンの 1 つの場所から間移動をできます。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesToProperty">
            <summary>
動作のスコープに対する DependencyProperty。詳細については、「FluidMoveScope」を参照してください。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActiveProperty">
            <summary>
動作のアクティブな状態に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagProperty">
            <summary>
独自のタグやバインド要素の要素を使用する機能の DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPathProperty">
            <summary>
UsaBindingAsTag が true の場合へのバインドを追加するのには DependencyProperty の余分なパス。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IdentityTagProperty">
            <summary>
アイデンティティ タグがコンテナー間で要素の動作を検出するために使用します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo">
            <summary>
動作がこの要素のみに適用するか、または要素のすべての子に適用するかを示します (要素が Panel の場合)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive">
            <summary>
動作が現在アクティブ化どうかを示します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag">
            <summary>
独自のタグとして、要素を使用するか、またはバインド要素のタグとして使用するかどうかを示します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath">
            <summary>
TagType が指定されている場合へのバインドを追加するのには余分なパスです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagData">
            <summary>
タグ付きの項目に関連するすべての関連データを格納するプライベート構造
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
レイアウトの変更について要素 (または要素のセット) を監視し、必要に応じて新しい位置に要素を滑らかに移動する動作。この動作は要素のサイズまたは可視性をアニメーション化せず、その親コンテナ内部の要素のオフセットをアニメーション化するだけです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
移動期間に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.InitialTagProperty">
            <summary>
前に、のオブジェクトだけを使用するタグの種類の DependencyProperty が読み込まれます。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.InitialTagPathProperty">
            <summary>
UsaBindingAsTag が true の場合へのバインドを追加するのには DependencyProperty の余分なパス。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.InitialIdentityTagProperty">
            <summary>
アイデンティティ タグがコンテナー間で要素の動作を検出するために使用します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.FloatAboveProperty">
            <summary>
FloatAbove フラグの DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
移動の水平方向コンポーネントに使用する EasingFunction の DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
移動の垂直方向コンポーネントに使用する EasingFunction の DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.OverlayProperty">
            <summary>
使用されているポップアップと装飾を覚え、= true FloatAbove のコンテナー間で要素のアニメーションの場合。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.CacheDuringOverlayProperty">
            <summary>
不透明度キャッシュのポップアップを浮動するときに使用します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.HasTransformWrapperProperty">
            <summary>
アニメーションの変換を示します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
移動の時間。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.InitialTag">
            <summary>
このアイテムのポイントを生成します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.InitialTagPath">
            <summary>
TagType が指定されている場合へのバインドを追加するのには余分なパスです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.FloatAbove">
            <summary>
要素のコンテナー、ポップアップや装飾の上にフローティングすることを許可するかどうかを示すフラグのコンテナーを変更する場合。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
移動の水平方向コンポーネントに使用する EasingFunction。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
移動の垂直方向コンポーネントに使用する EasingFunction。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.AdornerContainer">
            <summary>
装飾として使用する場合は、すべて UIElement ように単純なヘルパー クラスです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
起動されたときに、FrameworkElement を特定 FrameworkElement に移行するアクションです。
            </summary>
            <remarks>
TargetName プロパティが設定されると、このアクションはターゲット要素の状態の変更を試みます。設定されなければ、要素ツリー上で状態を定義する別のターゲットを検索します。ControlTemplate および UserControl が 可能性の高い 2 つの選択肢です。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
ターゲットが変化すると呼び出されます。TargetName プロパティが設定されない場合、このアクションはカスタム動作を有します。
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
<exception cref="T:System.InvalidOperationException">状態のある適切な FrameworkElement  が見つかりませんでした。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションが起動されると、このメソッドが呼び出されます。
            </summary>
            <param name="parameter"></param>
<exception cref="T:System.InvalidOperationException">ターゲットを指定の StateName に変更できませんでした。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
状態間の移行に VisualTransition を使用するかどうか。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
VisualState の名前。  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
キーボード イベントによってトリガーされる Trigger。ターゲットの Key および Modifier が検出されると起動します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
Trigger を起動するために押す必要のあるキー。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
Trigger が起動するためには、Modifier がアクティブである必要があります (既定では修飾子は選択されていません)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.ActiveOnFocus">
            <summary>
true の場合、Trigger はそのトリガー ソース オブジェクトのみをリッスンします。つまり、要素のフォーカスが起動するトリガーにある必要があります。false の場合、Trigger はルートをリッスンするため、処理できない KeyDown/Up メッセージがあれば検出されます。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
KeyDown または KeyUp イベントにリッスンするかどうか。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.LaunchUriOrFileAction">
            <summary>
ファイルまたは URI を開くためのプロセスを起動するアクション。ファイルの場合、このアクションは指定されたファイル拡張子に対して既定のプログラムを起動します。URI はウェブ ブラウザーで開きます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.LaunchUriOrFileAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションが起動されると、このメソッドが呼び出されます。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.LaunchUriOrFileAction.Path">
            <summary>
開こうとするファイルまたは URI。 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
アタッチされた要素をマウスをドラッグのジェスチャに応答して要素の上に再配置します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
ルート要素の左との相対で、ドラッグされる要素の X 位置に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
ルート要素の上方との相対で、ドラッグされる要素の Y 位置に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
ConstrainToParentBounds プロパティに対する DependencyProperty。true の場合、ドラッグされた要素はその親コンテナーの境界内に固定するように制約されます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
特定の座標に関連要素の位置を更新しようとします。
            </summary>
<param name="point">ルート座標内の要素の目的の位置。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
関連要素に相対位置移動を適用します。
            </summary>
<param name="x">ルート座標内の X コンポーネントの必要な移動。</param>
<param name="y">ルート座標内の Y コンポーネントの必要な移動。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
特定の移動を関連要素の RenderTransform に適用します。
            </summary>
<param name="x">親座標内の X コンポーネントの移動。</param>
<param name="y">親座標内の Y コンポーネントの移動。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.CloneTransform(System.Windows.Media.Transform)">
            <summary>
指定された変換のコピーされることは、再帰が深い。
            </summary>
<param name="transform">クローンを作成するトランスフォームを指定します。</param>
<returns>指定された変換、または NULL の場合の詳細コピー指定された変換は null です。</returns>
<exception cref="T:System.ArgumentException">変換の種類が認識されない場合にスローされます。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
関連要素の現在レンダリングされた位置に基づいて X および Y のプロパティを更新します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
1 つの四角形が別の四角形に含まれるかどうかチェックします。
            </summary>
<param name="rect1">含む四角形。</param>
<param name="rect2">含まれる四角形。</param>
<returns><c>true</c> rect1 が rect2 を含む場合、それ以外の場合は <c>false</c></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
ベクターとして変換します。
            </summary>
<param name="transform">変換。</param>
<param name="x">ベクターの X コンポーネント。</param>
<param name="y">ベクターの Y コンポーネント。</param>
<returns>ベクターとしての変換により変換された X 値および Y 値を含む点。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
変換オフセットを取得します。
            </summary>
<param name="transform">変換。</param>
<returns>変換のオフセット。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
ビヘイビアーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これをオーバーライドし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
ビヘイビアーが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
<remarks>これをオーバーライドし、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
ドラッグ ジェスチャーの開始時に発生します。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
ドラッグ ジェスチャーの更新処理時に発生します。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
ドラッグ ジェスチャーの終了時に発生します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
ルート要素の左との相対で、ドラッグされる要素の X 位置を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
ルート要素の上方との相対で、ドラッグされる要素の Y 位置を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
ドラッグされる要素がその親コンテナーの境界内に固定するように制約されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。
            </summary>
            <value>
	ドラッグされる要素が親領域内に制約される必要がある場合は<c>true</c>、それ以外の場合は<c>false</c>。
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
ルート座標内の関連要素の画面上の位置を取得します。
            </summary>
<value>ルート座標内の関連要素の画面上の位置。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
要素座標内にバインドする要素を取得します。
            </summary>
<value>要素座標内にバインドする要素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
関連オブジェクトの親要素を取得します。
            </summary>
<value>関連オブジェクトの親要素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
関連オブジェクトがあるシーンのルート要素を取得します。
            </summary>
<value>関連オブジェクトがあるシーンのルート要素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RenderTransform">
            <summary>
取得および関連付けられている要素の RenderTransform を設定します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
完了時にサウンドを鳴らす Action。
            </summary>
            <remarks>
この Actionは、停止または制御する必要のない短いサウンド効果の利用を想定しています。音楽プレーヤやゲームを作成する場合には役に立たないかも知れません。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
Action を起動するとき、動的に作成された MediaElement をカスタマイズするためにこのメソッドが利用されます。
            </summary>
            <remarks>
このメソッドは、Action 作成者が PlaySoundAction を拡張したい場合に役立つ可能性があります。MediaElement バランス プロパティを管理する場合、PlaySoundAction から継承してこのメソッドを上書きすることができます。
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションを起動する必要がある場合に、このメソッドが呼び出されます。 
            </summary>
            <remarks>
Action を呼び出すごとに新しいサウンドが再生されます。実装は変更される可能性がありますが、発信者はこれにより新しい MediaElement が作成され、再生の終了時またはメディアが再生に失敗した場合に消去されることを覚えておいてください。
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
サウンド ファイルの場所を定義する URI。これは、MediaElement のソース プロパティの設定に使用します。これは依存関係プロパティです。
            </summary>
            <remarks>
サウンドのファイル形式は MediaElement でサポートされていればどれでも使用できます。動画の場合には、オーディオのみが再生されます。
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
サウンドの音量制御。これは、MediaElement の音量プロパティの設定に使用します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
起動されたときに、ターゲット要素をツリーから削除する Action です。
            </summary>
            <remarks>
この Action は失敗する場合があります。この Action は、共通の親から要素を削除する方法は認識しますが、カスタム コレクションからの削除またはビジュアル ツリーの直接操作は認識しません。
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.SetDataStoreValueAction">
            <summary>
プロパティの値からデータを変更するアクションは、オブジェクトを格納します。このクラスは、ChangePropertyAction に同一です。唯一の違いは、この操作をデータ ストア ピッカーをロードすることです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
ストーリーボードをターゲットにする能力を提供する抽象的なクラス。
            </summary>
            <remarks>
このクラスは、Action 作成者にストーリーボードをターゲットにするための標準的な方法を提供します。設計ツールは、デザイナが腕を磨けるように、この Action から継承するクラスの特殊な編集体験を提供する場合があります。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
このメソッドは、ストーリーボード プロパティが変更される場合に呼び出されます。
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
対象のストーリーボード。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
起動されたときに、ターゲット ストーリーボードの状態を変更するアクションです。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションを起動する必要がある場合に、このメソッドが呼び出されます。このメソッドは、ControlStoryboardOption で定義された方法でターゲット ストーリーボードの変更を試行します。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
ストーリーボードをターゲットにする能力を提供する抽象的なクラス。
            </summary>
            <remarks>
このクラスは、Trigger 作成者にストーリーボードをターゲットにするための標準的な方法を提供します。設計ツールは、デザイナが腕を磨けるように、この Trigger から継承するクラスの特殊な編集体験を提供する場合があります。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
このメソッドは、ストーリーボード プロパティが変更される場合に呼び出されます。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
対象のストーリーボード。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
ストーリーボードの完了をリッスンするトリガー。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
ソース上で発生する指定されたイベントによりトリガーされ、イベントが起動されたときに遅れて起動する Trigger。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
目盛の間の待ち時間 (ミリ秒) を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
Trigger が終了する前に起動される目盛の合計数を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.TransitionEffect">
            <summary>
その 1 つの視覚から効果を 0 ～ 1 の補間の値を使用して他の視覚、切り替え効果のシェーダーを定義します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.TransitionEffect.InputProperty">
            <summary>
ブラシの値のプロパティにｻﾝﾌﾟﾗｰ プロパティは、シェーダーでオンにします。トランジションの最終状態であるイメージを表す
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.TransitionEffect.OldImageProperty">
            <summary>
ブラシの値のプロパティにｻﾝﾌﾟﾗｰ プロパティは、シェーダーでオンにします。移行の初期状態にあるイメージを表す
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.TransitionEffect.ProgressProperty">
            <summary>
バッキング ストア用として、DependencyProperty を使用します。これは、アニメーション、スタイル、バインディングなどできます.倍精度浮動小数点型 (Double) の Lotus 1-2-3 (0 ～ 1 のセル範囲) 開始から終了に至るまでの状態を表すために使用される値
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.TransitionEffect.CloneCurrentValue">
            <summary>
 の変更可能な複製 (ディープ コピー) を作成します。<see cref="T:TransitionEffect"/>その現在の値を使用します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.TransitionEffect.DeepCopy">
            <summary>
切り替え効果のディープ コピーを作成できます。Silverlight では実装 CloneCurrentValue。
            </summary>
<returns>切り替え効果の現在のインスタンスのクローン。</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.TransitionEffect.#ctor">
            <summary>
シェーダーの変数を既定値に更新されます。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.TransitionEffect.Input">
            <summary>
シェーダー内の入力変数の設定を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.TransitionEffect.OldImage">
            <summary>
OldImage 変数内で、シェーダーの設定を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.TransitionEffect.Progress">
            <summary>
シェーダー内の実行中の変数の設定を取得または設定します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior">
            <summary>
一般的なタッチ ジェスチャを使用して、変換、ズーム、および接続されているオブジェクトを回転するよう促します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.OnAttached">
            <summary>
ビヘイビアーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これをオーバーライドし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.OnDetaching">
            <summary>
ビヘイビアーが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
<remarks>これをオーバーライドし、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.SupportedGestures">
            <summary>
設定をサポートする、拡大/縮小] および [翻訳のバリエーションを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.TranslateFriction">
            <summary>
設定で変換が縮小され、率を示す数値を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.RotationalFriction">
            <summary>
セットの回転が減少率を示す数を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.ConstrainToParentBounds">
            <summary>
示す、値を取得または設定かどうか、拡大し、添付の位置に変換オブジェクトは親オブジェクトの境界によって制限されます。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.MinimumScale">
            <summary>
指定できる最小のズームの値を示す番号の設定を取得または設定します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.TranslateZoomRotateBehavior.MaximumScale">
            <summary>
許容される最大のズームの値を示す番号の設定を取得または設定します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.VisualStateUtilities">
            <summary>
このクラスのビジュアル状態マネージャーでの作業をさまざまなプラットフォーム不明な標準的な操作が用意されています。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
            <summary>
コントロールの 2 つの状態を遷移します。
            </summary>
<param name="element">状態間の遷移する要素。</param>
<param name="stateName">状態に遷移します。</param>
<param name="useTransitions">True を設定すると、System.Windows.VisualTransition に遷移状態間を使用して、それ以外の場合は、False を指定します。</param>
<returns>コントロールが正常に新しい状態に移行する場合は True、それ以外の場合は、False を指定します。</returns>
<exception cref="T:System.ArgumentNullException">コントロールが NULL です。</exception>
<exception cref="T:System.ArgumentNullException">stateName が NULL です。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups(System.Windows.FrameworkElement)">
            <summary>
VisualStateManager.VisualStateGroups の添付プロパティの値を取得します。
            </summary>
<param name="targetObject">VisualStateManager.VisualStateGroups を取得する対象となる要素です。</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement,System.Windows.FrameworkElement@)">
            <summary>
ビジュアル状態を含む最も近い親が見つかりません。
            </summary>
<param name="contextElement">最も近いステートフル コントロールを検索する要素。</param>
<param name="resolvedControl">最も近いステートフル コントロール true の場合、他の NULL。</param>
<returns>親に視覚的な状態が含まれている場合は true、それ以外の場合は false。</returns>
        </member>
        <member name="T:ExceptionStringTable">
            <summary>
ローカライズされた文字列などを調べるために、厳密に型指定されたリソース クラス。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ResourceManager">
            <summary>
このクラスで使用される、キャッシュされた ResourceManager インスタンスに戻ります。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.Culture">
            <summary>
この厳密に型指定されたリソース クラスを使用して、すべてのリソース ルックアップに対して現在のスレッドの CurrentUICulture プロパティを上書きします。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.CallMethodActionValidMethodNotFoundExceptionMessage">
            <summary>
検索する類似したローカライズされた文字列オブジェクトの型 &apos;{1} &apos; は予期された署名と一致する &apos; {0}&apos; という名前のメソッドが見つかりませんでした。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionAmbiguousAdditionOperationExceptionMessage">
            <summary>
1 つ以上発生する可能性のある加算演算子の種類 &apos;{0}&apos; が見つかりましたに類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionCannotAnimateTargetTypeExceptionMessage">
            <summary>
類似したローカライズされた文字列を検索、プロパティの変更の種類 &apos;{0}&apos; のターゲットをアニメーション化することはできません。プロパティの変更が DependencyObject から派生した型にのみアニメーション化できます。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
「型 &quot;{1}&quot; に &quot;{0}&quot; という名前のプロパティが見つかりません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionCannotIncrementAnimatedPropertyChangeExceptionMessage">
            <summary>
Duration プロパティが設定されている場合、増加のプロパティに類似したローカライズされた文字列検索 True に設定することはできません。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionCannotIncrementWriteOnlyPropertyExceptionMessage">
            <summary>
&apos; その値を読み取ることができないために、プロパティを上げることはできません {0} に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
類似したローカライズされた文字列を検索タイプ「2 {0}」のプロパティを「{1}」型「{0}」の値を割り当てることができません。プロパティ「{1}」型&quot;{2} の値だけを割り当てることができます。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
「型 &quot;{1}&quot; で定義されたプロパティ &quot;{0}&quot; は set メソッドを公開しないため、変更できません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.DataStateBehaviorStateNameNotFoundExceptionMessage">
            <summary>
検索する類似したローカライズされた文字列 &apos;{0} &apos; 型 &apos; {1}&apos; という名前の状態が見つかりません状態が存在し、このコンテキストでアクセスできることを確認してください。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
ターゲット {0} に類似したローカライズされた文字列を検索、VisualStateGroups は定義しません。 .
            </summary>
        </member>
        <member name="P:ExceptionStringTable.InvalidLeftOperand">
            <summary>
演算子では「{1}」型「{0}」の LeftOperand に類似したローカライズされた文字列の検索を使用することはできません。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.InvalidOperands">
            <summary>
演算子では「2 {0}」型「{1}」の LeftOperand と RightOperand の種類「{0}」に類似したローカライズされた文字列の検索を使用することはできません。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.InvalidRightOperand">
            <summary>
演算子では「{1}」型「{0}」の RightOperand に類似したローカライズされた文字列の検索を使用することはできません。
            </summary>
        </member>
        <member name="P:ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
「RemoveElementAction のターゲットはサポートされていません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
    </members>
</doc>
